{"ast":null,"code":"class AuthenticationService{registerSuccessfulLogin(username,password){console.log('registerSuccessfulLogin');sessionStorage.setItem('authenticatedUser',username);}logout(){sessionStorage.removeItem('authenticatedUser');}isUserLoggedIn(){let user=sessionStorage.getItem('authenticatedUser');if(user===null)return false;return true;}getLoggedInUserName(){let user=sessionStorage.getItem('authenticatedUser');if(user===null)return'';return user;}}export default new AuthenticationService();","map":{"version":3,"names":["AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"sources":["C:/Users/wow/Desktop/New folder/frontend/todo-app/src/components/todo/AuthenticationService.js"],"sourcesContent":["class AuthenticationService {\n\n    registerSuccessfulLogin(username,password){\n        console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username);\n    }\n\n    logout() {\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return false\n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return ''\n        return user\n    }\n}\n\nexport default new AuthenticationService()"],"mappings":"AAAA,KAAM,CAAAA,qBAAsB,CAExBC,uBAAuBA,CAACC,QAAQ,CAACC,QAAQ,CAAC,CACtCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCC,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAEL,QAAQ,CAAC,CACzD,CAEAM,MAAMA,CAAA,CAAG,CACLF,cAAc,CAACG,UAAU,CAAC,mBAAmB,CAAC,CAClD,CAEAC,cAAcA,CAAA,CAAG,CACb,GAAI,CAAAC,IAAI,CAAGL,cAAc,CAACM,OAAO,CAAC,mBAAmB,CAAC,CACtD,GAAGD,IAAI,GAAG,IAAI,CAAE,MAAO,MAAK,CAC5B,MAAO,KAAI,CACf,CAEAE,mBAAmBA,CAAA,CAAG,CAClB,GAAI,CAAAF,IAAI,CAAGL,cAAc,CAACM,OAAO,CAAC,mBAAmB,CAAC,CACtD,GAAGD,IAAI,GAAG,IAAI,CAAE,MAAO,EAAE,CACzB,MAAO,CAAAA,IAAI,CACf,CACJ,CAEA,cAAe,IAAI,CAAAX,qBAAqB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}