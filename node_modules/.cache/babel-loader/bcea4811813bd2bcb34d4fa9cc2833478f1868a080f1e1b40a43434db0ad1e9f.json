{"ast":null,"code":"import React,{Component}from'react';import moment from'moment';import{Formik,Form,Field,ErrorMessage}from'formik';import TodoDataService from'../../api/todo/TodoDataService.js';import AuthenticationService from'./AuthenticationService.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class TodoComponent extends Component{constructor(props){super(props);this.state={id:this.props.match.params.id,description:'',targetDate:moment(new Date()).format('YYYY-MM-DD')};this.onSubmit=this.onSubmit.bind(this);this.validate=this.validate.bind(this);}componentDidMount(){if(this.state.id===-1){return;}let username=AuthenticationService.getLoggedInUserName();TodoDataService.retrieveTodo(username,this.state.id).then(response=>this.setState({description:response.data.description,targetDate:moment(response.data.targetDate).format('YYYY-MM-DD')}));}validate(values){let errors={};if(!values.description){errors.description='Enter a Description';}else if(values.description.length<5){errors.description='Enter atleast 5 Characters in Description';}if(!moment(values.targetDate).isValid()){errors.targetDate='Enter a valid Target Date';}return errors;}onSubmit(values){let username=AuthenticationService.getLoggedInUserName();let todo={id:this.state.id,description:values.description,targetDate:values.targetDate};if(this.state.id===-1){TodoDataService.createTodo(username,todo).then(()=>this.props.history.push('/todos'));}else{TodoDataService.updateTodo(username,this.state.id,todo).then(()=>this.props.history.push('/todos'));}console.log(values);}render(){let{description,targetDate}=this.state;//let targetDate = this.state.targetDate\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Todo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{description,targetDate},onSubmit:this.onSubmit,validateOnChange:false,validateOnBlur:false,validate:this.validate,enableReinitialize:true,children:props=>/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(ErrorMessage,{name:\"description\",component:\"div\",className:\"alert alert-warning\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"targetDate\",component:\"div\",className:\"alert alert-warning\"}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",type:\"text\",name:\"description\"})]}),/*#__PURE__*/_jsxs(\"fieldset\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Target Date\"}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",type:\"date\",name:\"targetDate\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",type:\"submit\",children:\"Save\"})]})})})]});}}export default TodoComponent;","map":{"version":3,"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","jsx","_jsx","jsxs","_jsxs","TodoComponent","constructor","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","history","push","updateTodo","console","log","render","children","className","initialValues","validateOnChange","validateOnBlur","enableReinitialize","name","component","type"],"sources":["C:/Users/wow/Desktop/New folder/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id : this.props.match.params.id,\n            description : '',\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if(this.state.id===-1) {\n            return\n        }\n        \n        let username = AuthenticationService.getLoggedInUserName()\n        \n        TodoDataService.retrieveTodo(username, this.state.id)\n             .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n             }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if(!values.description) {\n            errors.description = 'Enter a Description'\n        } else if(values.description.length<5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        if(!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.history.push('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.history.push('/todos'))\n        }\n        \n        console.log(values);\n    }\n\n    render() {\n        \n        let {description,targetDate} = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik \n                        initialValues={{description,targetDate}}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                \n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}